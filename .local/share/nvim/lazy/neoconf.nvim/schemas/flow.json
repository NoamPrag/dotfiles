{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Flow support for VS Code",
  "properties": {
    "flow.coverageSeverity": {
      "default": "info",
      "description": "Type coverage diagnostic severity",
      "enum": [
        "error",
        "warn",
        "info"
      ],
      "scope": "resource",
      "type": "string"
    },
    "flow.enabled": {
      "default": true,
      "description": "Is flow enabled",
      "scope": "resource",
      "type": "boolean"
    },
    "flow.lazyMode": {
      "default": null,
      "description": "Set value to enable flow lazy mode",
      "scope": "resource",
      "type": "string"
    },
    "flow.logLevel": {
      "default": "info",
      "description": "Log level for output panel logs",
      "enum": [
        "error",
        "warn",
        "info",
        "trace"
      ],
      "scope": "resource",
      "type": "string"
    },
    "flow.pathToFlow": {
      "default": "flow",
      "description": "Absolute path to flow binary. Special var ${workspaceFolder} or ${flowconfigDir} can be used in path (NOTE: in windows you can use '/' and can omit '.cmd' in path)",
      "scope": "resource",
      "type": "string"
    },
    "flow.showUncovered": {
      "default": false,
      "description": "If true will show uncovered code by default",
      "scope": "resource",
      "type": "boolean"
    },
    "flow.stopFlowOnExit": {
      "default": true,
      "description": "Stop Flow on Exit",
      "scope": "resource",
      "type": "boolean"
    },
    "flow.trace.server": {
      "anyOf": [
        {
          "default": "off",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "type": "string"
        }
      ],
      "default": "off",
      "description": "Traces the communication between VSCode and the flow lsp service.",
      "scope": "window"
    },
    "flow.useBundledFlow": {
      "default": true,
      "description": "If true will use flow bundled with this plugin if nothing works",
      "scope": "resource",
      "type": "boolean"
    },
    "flow.useCodeSnippetOnFunctionSuggest": {
      "default": true,
      "description": "Complete functions with their parameter signature.",
      "scope": "resource",
      "type": "boolean"
    },
    "flow.useNPMPackagedFlow": {
      "default": true,
      "description": "Support using flow through your node_modules folder, WARNING: Checking this box is a security risk. When you open a project we will immediately run code contained within it.",
      "scope": "resource",
      "type": "boolean"
    }
  }
}
